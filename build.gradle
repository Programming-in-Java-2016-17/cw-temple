/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4.1/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
//apply plugin: 'java-library'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'jdepend'
apply plugin: 'pmd'
apply plugin: "jacoco"
apply plugin: 'idea'
apply plugin: 'application'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
//    mavenCentral()
}

dependencies {
// Use JUnit test framework
    compile     'junit:junit:4.12'
    testCompile 'junit:junit:4.12'
}

//mainClassName = "main.GUImain"
//mainClassName = "main.TXTmain"
//mainClassName = "searchexample.Driver"
mainClassName = "searchexample.Maze"


jdepend {
    ignoreFailures = true
}

checkstyle {
    toolVersion = "7.6"
}

findbugs {
    toolVersion = "3.0.1"
    ignoreFailures = true
    reportLevel = "high"
    effort = "max"
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet resources.text.fromFile('config/xsl/checkstyle-custom.xsl')
    }
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet resources.text.fromFile('config/xsl/findbugs-custom.xsl')
    }
}

jacoco {
    toolVersion = "0.7.6.201602180812"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination = file("${buildDir}/jacocoHtml")
    }
}

sourceSets {
    test {
        java {
            srcDirs = ['src/main/java/student']
        }
    }
}

sourceSets.all {
    println name
}